---
import { languages } from '../i18n';

interface Props {
  currentLang: string;
}

const { currentLang } = Astro.props;
---

<div class="language-selector">
  <label for="language-select" class="language-label">
    üåê
  </label>
  <select id="language-select" class="language-select" value={currentLang}>
    {Object.entries(languages).map(([code, name]) => (
      <option value={code} selected={code === currentLang}>
        {name}
      </option>
    ))}
  </select>
</div>

<script>
  const languageSelect = document.getElementById('language-select') as HTMLSelectElement;
  
  if (languageSelect) {
    languageSelect.addEventListener('change', (e) => {
      const target = e.target as HTMLSelectElement;
      const newLang = target.value;
      const currentPath = window.location.pathname;
      
      // Remove current language from path if it exists
      const pathWithoutLang = currentPath.replace(/^\/(en|es)/, '') || '/';
      
      // Navigate to new language path
      const newPath = `/${newLang}${pathWithoutLang === '/' ? '' : pathWithoutLang}`;
      window.location.href = newPath;
    });
  }
</script>

<style>
  .language-selector {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .language-selector:hover {
    transform: translateY(-3px);
    background: rgba(139, 69, 219, 0.2);
    border-color: rgba(168, 85, 247, 0.5);
    box-shadow: 0 12px 40px rgba(139, 69, 219, 0.2);
  }
  
  .language-label {
    font-size: 1.5rem;
    margin: 0;
    color: #8b45db;
    animation: pulse 2s infinite;
    filter: drop-shadow(0 2px 4px rgba(139, 69, 219, 0.3));
  }
  
  .language-select {
    padding: 0.75rem 1rem;
    border: 2px solid rgba(168, 85, 247, 0.3);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.9);
    color: #4c1d95;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    min-width: 120px;
    backdrop-filter: blur(10px);
  }
  
  .language-select:hover {
    border-color: #8b45db;
    background: rgba(255, 255, 255, 0.95);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(139, 69, 219, 0.25);
  }
  
  .language-select:focus {
    outline: none;
    border-color: #8b45db;
    background: rgba(255, 255, 255, 1);
    box-shadow: 0 0 0 4px rgba(139, 69, 219, 0.15), 0 8px 25px rgba(139, 69, 219, 0.25);
    transform: translateY(-2px);
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
      filter: drop-shadow(0 2px 4px rgba(139, 69, 219, 0.3));
    }
    50% {
      transform: scale(1.15);
      filter: drop-shadow(0 4px 8px rgba(139, 69, 219, 0.5));
    }
  }

  @media (max-width: 768px) {
    .language-selector {
      padding: 0.75rem;
      border-radius: 14px;
    }

    .language-label {
      font-size: 1.3rem;
    }

    .language-select {
      padding: 0.6rem 0.8rem;
      font-size: 0.9rem;
      min-width: 100px;
      border-radius: 10px;
    }
  }

  @media (max-width: 480px) {
    .language-selector {
      padding: 0.5rem;
      margin-bottom: 1rem;
      gap: 0.5rem;
      border-radius: 12px;
    }

    .language-label {
      font-size: 1.1rem;
    }

    .language-select {
      padding: 0.5rem 0.6rem;
      font-size: 0.85rem;
      min-width: 90px;
      border-radius: 8px;
    }
  }
</style>