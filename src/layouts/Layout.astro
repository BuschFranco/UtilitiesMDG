---
import LanguageSelector from '../components/LanguageSelector.astro';

export interface Props {
  title: string;
  currentLang?: string;
}

const { title, currentLang = 'en' } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
  </head>
  <body>
    <div class="parallax-bg"></div>
    <header class="header">
      <div class="nav-controls">
        <LanguageSelector currentLang={currentLang} />
      </div>
      <div class="logo-container">
        <a href="/" class="logo">
          <img src="/MDGlogo.png" alt="Media Digital Group" class="logo-img" />
        </a>
      </div>
    </header>
    <main class="container">
      <slot />
    </main>
  </body>
</html>

<style is:global>
  :root {
    /* Purple Color Palette */
    --primary-color: #8b5cf6;
    --primary-hover: #7c3aed;
    --primary-light: #a78bfa;
    --primary-dark: #6d28d9;
    --secondary-color: #c084fc;
    --accent-color: #ddd6fe;
    --background-gradient: linear-gradient(135deg, #8b5cf6 0%, #6d28d9 50%, #5b21b6 100%);
    --background-light: #faf5ff;
    --text-primary: #1f2937;
    --text-secondary: #6b7280;
    --text-light: #ffffff;
    --border-color: #e5e7eb;
    --shadow-color: rgba(139, 92, 246, 0.15);
    --shadow-hover: rgba(139, 92, 246, 0.25);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    scroll-behavior: smooth;
    overflow-x: hidden;
  }

  body {
    background: var(--background-gradient);
    min-height: 100vh;
    color: var(--text-primary);
    overflow-x: hidden;
    position: relative;
  }

  /* Animated Background */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 20% 80%, rgba(139, 92, 246, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(192, 132, 252, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, rgba(221, 214, 254, 0.05) 0%, transparent 50%);
    animation: backgroundFloat 20s ease-in-out infinite;
    z-index: -1;
  }

  @keyframes backgroundFloat {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(1deg);
    }
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    position: relative;
    z-index: 1;
  }

  /* Header Styles */
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(168, 85, 247, 0.3);
    padding: 0 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 20px rgba(139, 69, 219, 0.2);
  }

  .nav-controls {
    /* Selector de idiomas a la izquierda */
  }

  .logo-container {
    /* Logo a la derecha en desktop */
  }

  .logo {
    text-decoration: none;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
  }

  .logo-img {
    height: 40px;
    width: auto;
    transition: all 0.3s ease;
  }

  .logo:hover .logo-img {
    transform: scale(1.05);
    filter: brightness(1.1);
  }

  @keyframes logoFloat {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-5px);
    }
  }

  /* Card Styles */
  .card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 24px;
    padding: 2.5rem;
    box-shadow: 
      0 20px 25px -5px rgba(139, 92, 246, 0.1),
      0 10px 10px -5px rgba(139, 92, 246, 0.04);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(139, 92, 246, 0.05),
      transparent
    );
    transition: left 0.6s;
  }



  /* Button Styles */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 2rem;
    border: none;
    border-radius: 16px;
    font-size: 1rem;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
  }

  .btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s;
  }

  .btn:hover::before {
    left: 100%;
  }

  .btn-primary {
    background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
    color: var(--text-light);
    box-shadow: 0 8px 25px rgba(139, 92, 246, 0.3);
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, var(--primary-hover), var(--primary-color));
    transform: translateY(-3px);
    box-shadow: 0 12px 35px rgba(139, 92, 246, 0.4);
  }

  .btn-secondary {
    background: rgba(139, 92, 246, 0.1);
    color: var(--primary-color);
    border: 2px solid var(--primary-color);
  }

  .btn-secondary:hover {
    background: var(--primary-color);
    color: var(--text-light);
    transform: translateY(-2px);
  }

  /* Form Styles */
  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-label {
    display: block;
    margin-bottom: 0.75rem;
    font-weight: 600;
    color: var(--text-primary);
    font-size: 0.95rem;
  }

  .form-input,
  .form-select,
  .form-textarea {
    width: 100%;
    padding: 1rem 1.25rem;
    border: 2px solid rgba(139, 92, 246, 0.2);
    border-radius: 12px;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    color: var(--text-primary);
  }

  .form-input:focus,
  .form-select:focus,
  .form-textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    background: rgba(255, 255, 255, 0.95);
    transform: translateY(-2px);
    box-shadow: 
      0 0 0 4px rgba(139, 92, 246, 0.1),
      0 8px 25px rgba(139, 92, 246, 0.15);
  }

  .form-input::placeholder,
  .form-textarea::placeholder {
    color: var(--text-secondary);
  }

  /* Checkbox Styles */
  .checkbox-group {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .checkbox {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    cursor: pointer;
    padding: 0.75rem;
    border-radius: 12px;
    transition: all 0.3s ease;
  }

  .checkbox:hover {
    background: rgba(139, 92, 246, 0.05);
  }

  .checkbox input[type="checkbox"] {
    width: 1.25rem;
    height: 1.25rem;
    accent-color: var(--primary-color);
  }

  /* Alert Styles */
  .alert {
    padding: 1rem 1.5rem;
    border-radius: 12px;
    margin: 1rem 0;
    font-weight: 500;
    backdrop-filter: blur(10px);
  }

  .alert-success {
    background: rgba(34, 197, 94, 0.1);
    color: #059669;
    border: 1px solid rgba(34, 197, 94, 0.2);
  }

  .alert-error {
    background: rgba(239, 68, 68, 0.1);
    color: #dc2626;
    border: 1px solid rgba(239, 68, 68, 0.2);
  }

  /* Loading Spinner */
  .loading {
    display: inline-block;
    width: 1rem;
    height: 1rem;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: var(--text-light);
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  /* Scroll Animations */
  .scroll-reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Scroll animations */
  .scroll-animate {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .scroll-animate.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  .scroll-animate.fade-in-left {
    transform: translateX(-30px);
  }

  .scroll-animate.fade-in-left.animate-in {
    transform: translateX(0);
  }

  .scroll-animate.fade-in-right {
    transform: translateX(30px);
  }

  .scroll-animate.fade-in-right.animate-in {
    transform: translateX(0);
  }

  .scroll-animate.scale-in {
    transform: scale(0.8);
  }

  .scroll-animate.scale-in.animate-in {
    transform: scale(1);
  }

  /* Header scroll effects */
  .header {
    transition: transform 0.3s ease-in-out;
  }

  .header-hidden {
    transform: translateY(-100%);
  }

  /* Scroll progress indicator */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 0%;
    height: 3px;
    background: linear-gradient(90deg, #8b45db, #a855f7);
    z-index: 9999;
    transition: width 0.1s ease;
    box-shadow: 0 0 10px rgba(139, 69, 219, 0.5);
  }

  /* Enhanced hover effects */
  .card {
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }



  /* Staggered animations */
  .scroll-animate:nth-child(1) { transition-delay: 0.1s; }
  .scroll-animate:nth-child(2) { transition-delay: 0.2s; }
  .scroll-animate:nth-child(3) { transition-delay: 0.3s; }
  .scroll-animate:nth-child(4) { transition-delay: 0.4s; }
  .scroll-animate:nth-child(5) { transition-delay: 0.5s; }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .header {
      padding: 0.75rem 1rem;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 1rem;
    }

    .logo-container {
      order: 1;
    }

    .nav-controls {
      order: 2;
      width: 100%;
      display: flex;
      justify-content: center;
    }

    .logo-img {
      height: 35px;
    }

    .container {
      padding: 1rem;
      max-width: 100%;
      overflow-x: hidden;
    }

    .card {
      padding: 1.5rem;
      border-radius: 20px;
    }



    .btn {
      padding: 0.875rem 1.5rem;
      font-size: 0.95rem;
    }

    .scroll-animate {
      transform: translateY(20px);
    }
  }

  @media (max-width: 480px) {
    .header {
      top: 0rem !important;
      padding: 0.5rem !important;
    }

    .logo-img {
      height: 30px;
    }

    .card {
      padding: 1rem !important;
      border-radius: 16px !important;
    }



    .container {
      padding: 0.5rem !important;
      margin-top: 40px;
    }

    .scroll-progress {
      height: 2px;
    }
  }
</style>

<script>
  // Scroll reveal animation
  function revealOnScroll() {
    const reveals = document.querySelectorAll('.scroll-reveal');
    
    reveals.forEach(element => {
      const windowHeight = window.innerHeight;
      const elementTop = element.getBoundingClientRect().top;
      const elementVisible = 150;
      
      if (elementTop < windowHeight - elementVisible) {
        element.classList.add('revealed');
      }
    });
  }

  // Parallax effect for background
  function parallaxEffect() {
    const scrolled = window.pageYOffset;
    const rate = scrolled * -0.5;
    
    const background = document.querySelector('body::before');
    if (background) {
      document.body.style.setProperty('--scroll-offset', `${rate}px`);
    }
  }

  // Initialize animations
  document.addEventListener('DOMContentLoaded', () => {
    // Add scroll reveal class to form sections
    const sections = document.querySelectorAll('.form-section, .card');
    sections.forEach(section => {
      section.classList.add('scroll-reveal');
    });

    // Initial reveal check
    revealOnScroll();
  });

  // Event listeners
  window.addEventListener('scroll', () => {
    revealOnScroll();
    parallaxEffect();
  });

  // Scroll-triggered animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-in');
      }
    });
  }, observerOptions);

  // Observe elements for scroll animations
  document.querySelectorAll('.scroll-animate').forEach(el => {
    observer.observe(el);
  });

  // Header scroll effect
  let lastScrollTop = 0;
  const header = document.querySelector('.header');
  
  window.addEventListener('scroll', () => {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
    if (scrollTop > lastScrollTop && scrollTop > 100) {
      // Scrolling down
      header?.classList.add('header-hidden');
    } else {
      // Scrolling up
      header?.classList.remove('header-hidden');
    }
    
    lastScrollTop = scrollTop;
  }, false);

  // Smooth scroll for internal links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });

  // Add scroll progress indicator
  const progressBar = document.createElement('div');
  progressBar.className = 'scroll-progress';
  document.body.appendChild(progressBar);

  window.addEventListener('scroll', () => {
    const scrollTop = document.documentElement.scrollTop;
    const scrollHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;
    const scrollPercent = (scrollTop / scrollHeight) * 100;
    progressBar.style.width = scrollPercent + '%';
  });
</script>